# This is a basic workflow to help you get started with Actions

name: on-master

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: 'master'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v1
      # pylint step
      - uses: cclauss/GitHub-Action-for-pylint@0.7.0
        with:
          args: 'pylint src'
      -   uses: actions/create-release@v1
          id: create_release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
            tag_name: release-${{ github.run_number }}
            # The name of the release. For example, `Release v1.0.1`
            release_name: "Release #${{ github.run_number }}"
            # Text describing the contents of the tag.
            body: ""
      - uses: montudor/action-zip@v0.1.1
        with:
          args: zip -qq -r src.zip src
      - name: Upload datasets
        uses: jaimevalero/push-kaggle-dataset@v1 # This is the action
        env:
          # Do not leak your credentials.
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

        with:
          id:  "simonmeoni/tweet-sentiment-extraction-competition"
          title: "code for tweet sentiment extraction competition"
          description: "my code for tweet sentiment extraction competition see the repository : https://github.com/simonmeoni/bert-impl"
          files:  "src.zip"
          is_public: true